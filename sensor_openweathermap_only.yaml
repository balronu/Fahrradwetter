# --------------------------------------
# Fahrradwetter-Konfiguration (Nur OpenWeatherMap)
# --------------------------------------

# 1. Rohdaten aus der 5-Tage-Vorhersage von OpenWeatherMap (alle 3h)
- platform: rest
  name: raw_fahrrad_forecast
  resource: "https://api.openweathermap.org/data/2.5/forecast?lat=YOUR_LATITUDE&lon=YOUR_LONGITUDE&appid=YOUR_API_KEY&units=metric&lang=de"
  value_template: "{{ value_json.list[0].dt }}"
  scan_interval: 3600
  json_attributes:
    - list

# 2. Aktuelles Wetter heute (inkl. Regen)
- platform: rest
  name: fahrradwetter_aktuell
  resource: "https://api.openweathermap.org/data/2.5/weather?lat=YOUR_LATITUDE&lon=YOUR_LONGITUDE&appid=YOUR_API_KEY&units=metric&lang=de"
  value_template: "{{ value_json.main.temp }}"
  scan_interval: 3600
  json_attributes:
    - weather
    - wind
    - main
    - clouds
    - rain

# 3. Wetter morgen um 06:00 Uhr
- platform: template
  sensors:
    fahrradwetter_morgen_0630:
      friendly_name: "Fahrradwetter Morgen 06:30"
      unit_of_measurement: "°C"
      value_template: >
        {% set forecast = state_attr('sensor.raw_fahrrad_forecast', 'list') %}
        {% set morgen = (now().date() + timedelta(days=1)).strftime('%Y-%m-%d') %}
        {% for block in forecast %}
          {% if block.dt_txt.startswith(morgen + ' 06:00:00') %}
            {% set temp = block.main.temp | float(0) %}
            {% if temp != 0 %}
              {{ temp }}
            {% else %}
              0
            {% endif %}
          {% endif %}
        {% endfor %}
      attribute_templates:
        dt_txt: >
          {% set forecast = state_attr('sensor.raw_fahrrad_forecast', 'list') %}
          {% set morgen = (now().date() + timedelta(days=1)).strftime('%Y-%m-%d') %}
          {% for block in forecast %}
            {% if block.dt_txt.startswith(morgen + ' 06:00:00') %}
              {{ block.dt_txt }}
            {% endif %}
          {% endfor %}
        weather: >
          {% set forecast = state_attr('sensor.raw_fahrrad_forecast', 'list') %}
          {% set morgen = (now().date() + timedelta(days=1)).strftime('%Y-%m-%d') %}
          {% for block in forecast %}
            {% if block.dt_txt.startswith(morgen + ' 06:00:00') %}
              {{ block.weather | first }}
            {% endif %}
          {% endfor %}
        wind: >
          {% set forecast = state_attr('sensor.raw_fahrrad_forecast', 'list') %}
          {% set morgen = (now().date() + timedelta(days=1)).strftime('%Y-%m-%d') %}
          {% for block in forecast %}
            {% if block.dt_txt.startswith(morgen + ' 06:00:00') %}
              {% set wind_speed = block.wind.speed | float(0) %}
              {% if wind_speed > 0 %}
                {{ wind_speed }}
              {% else %}
                0
              {% endif %}
            {% endif %}
          {% endfor %}
        rain: >
          {% set forecast = state_attr('sensor.raw_fahrrad_forecast', 'list') %}
          {% set morgen = (now().date() + timedelta(days=1)).strftime('%Y-%m-%d') %}
          {% set block = forecast | selectattr('dt_txt', 'search', morgen + ' 06:00:00') | list | first %}
          {% set rain_value = block.rain['3h'] if block.rain is defined and '3h' in block.rain else 0 %}
          {{ rain_value }}

# 4. Wetter morgen um 15:00 Uhr
- platform: template
  sensors:
    fahrradwetter_morgen_1600:
      friendly_name: "Fahrradwetter Morgen 16:00"
      unit_of_measurement: "°C"
      value_template: >
        {% set forecast = state_attr('sensor.raw_fahrrad_forecast', 'list') %}
        {% set morgen = (now().date() + timedelta(days=1)).strftime('%Y-%m-%d') %}
        {% for block in forecast %}
          {% if block.dt_txt.startswith(morgen + ' 15:00:00') %}
            {% set temp = block.main.temp | float(0) %}
            {% if temp != 0 %}
              {{ temp }}
            {% else %}
              0
            {% endif %}
          {% endif %}
        {% endfor %}
      attribute_templates:
        dt_txt: >
          {% set forecast = state_attr('sensor.raw_fahrrad_forecast', 'list') %}
          {% set morgen = (now().date() + timedelta(days=1)).strftime('%Y-%m-%d') %}
          {% for block in forecast %}
            {% if block.dt_txt.startswith(morgen + ' 15:00:00') %}
              {{ block.dt_txt }}
            {% endif %}
          {% endfor %}
        weather: >
          {% set forecast = state_attr('sensor.raw_fahrrad_forecast', 'list') %}
          {% set morgen = (now().date() + timedelta(days=1)).strftime('%Y-%m-%d') %}
          {% for block in forecast %}
            {% if block.dt_txt.startswith(morgen + ' 15:00:00') %}
              {{ block.weather | first }}
            {% endif %}
          {% endfor %}
        wind: >
          {% set forecast = state_attr('sensor.raw_fahrrad_forecast', 'list') %}
          {% set morgen = (now().date() + timedelta(days=1)).strftime('%Y-%m-%d') %}
          {% for block in forecast %}
            {% if block.dt_txt.startswith(morgen + ' 15:00:00') %}
              {% set wind_speed = block.wind.speed | float(0) %}
              {% if wind_speed > 0 %}
                {{ wind_speed }}
              {% else %}
                0
              {% endif %}
            {% endif %}
          {% endfor %}
        rain: >
          {% set forecast = state_attr('sensor.raw_fahrrad_forecast', 'list') %}
          {% set morgen = (now().date() + timedelta(days=1)).strftime('%Y-%m-%d') %}
          {% set block = forecast | selectattr('dt_txt', 'search', morgen + ' 15:00:00') | list | first %}
          {% set rain_value = block.rain['3h'] if block.rain is defined and '3h' in block.rain else 0 %}
          {{ rain_value }}
